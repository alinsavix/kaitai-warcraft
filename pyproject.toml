[build-system]
# requires = [ "setuptools>=42", "wheel" ]
# build-backend = "setuptools.build_meta"
requires = [
    "setuptools~=61.0",
    "wheel",

    # this will validate our project classifiers
    "trove-classifiers",
]
build-backend = "setuptools.build_meta"


[project]
name = "wowdump"
version = "0.0.1"
authors = [ { name = "TDV Alinsa", email = "alinsa-github@lupine.org" } ]
description = "Read World of Warcraft data formats"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Games/Entertainment",
    "Topic :: Software Development :: Code Generators",
]
requires-python = ">=3.9"
dependencies = [
    "kaitaistruct==0.9",
    "ppretty>=1.3",
    "requests>=2.25.0",
    "PyYAML>=5.3",
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/alinsavix/kaitai-wow"
"Bug Tracker" = "https://github.com/alinsavix/kaitai-wow/issues"

[project.scripts]
wowdump = "wowdump:main"

[tool.setuptools]
package-dir = { "" = "." }
# packages = wowdump
include-package-data = false

[tool.setuptools.packages.find]
# I don't really want to put my one package in another subdir so that
# I can use anything other than the top level as package_dir, so I guess
# we're stuck with this ugliness
where = [ "." ]
include = [
    "wowdump",
    "wowdump.commands",
    "wowdump.filetypes",
    "wowdump.simplifiers",
]
exclude = []
namespaces = true

[tool.setuptools.package-data]
"wowdump.filetypes" = [ "*.yaml" ]

[tool.mypy]
python_version = 3.9

mypy_path = "typings"
exclude = "^(wowdump/filetypes/|tests/|conftest\\.py|outputs/|typings/|out/|wowdump-script\\.py)"

# follow_imports = "silent"
# ignore_missing_imports = true
namespace_packages = true

strict_optional = true
disallow_subclassing_any = false
disallow_any_generics = true
disallow_untyped_defs = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true


[tool.isort]
# Blender primary before stdlib bits because that seems to be the order
# used in most of the blender built-in addons and such. There's probably
# no reason things *need* to be that way, but a consistently followed
# mediocre standard is better than a poorly followed one.
sections = [
    "FUTURE",
    "BLENDER_PRIMARY",
    "STDLIB",
    "BLENDER_SECONDARY",
    "BLENDER_OTHER",
    "FIRSTPARTY",
    "THIRDPARTY",
    "LOCALFOLDER",
]

known_blender_primary = [ "bpy", "bmesh", "mathutils" ]

known_blender_secondary = [
    "addon_utils",
    "aud",
    "bgl",
    "bl_operators",
    "bl_ui",
    "bl_ui_utils",
    "blend_render_info",
    "blf",
    "bpy_extras",
    "freestyle",
    "gpu",
    "gpu_extras",
    "nodeitems_builtins",
    "nodeitems_utils",
    "rna_keymap_ui",
    "rna_prop_ui",
]

known_blender_other = [
    "animsys_refactor",
    "bl_app_override",
    "bl_app_template_utils",
    "bl_i18n_utils",
    "bl_keymap_utils",
    "bl_previews_utils",
    "bl_rna_utils",
    "bpy_restrict_state",
    "bpy_types",
    "console",
    "console_python",
    "console_shell",
    "graphviz_export",
    "keyingsets_builtins",
    "keyingsets_utils",
    "rna_info",
    "rna_xml",
    "sys_info",
]


[tool.pytest.ini_options]
required_plugins = [
    "pytest-html >=3.1",
    "pytest-cov >=2.12",
    "pytest-order >=1.0",
]

log_cli = false
addopts = [
    "--tb=short",
    "--strict-markers",
    "--html=@rootdir@/tests/report.html",
    "--css=@rootdir@/tests/report.css",
    "--self-contained-html",
    "--cov=wowdump",
    "--cov-report=html:@rootdir@/tests/htmlcov",
]

console_output_style = "count"
log_auto_indent = true
norecursedirs = [ "*" ]
python_files = [ "test_*.py", "check_*.py", "example_*.py" ]
testpaths = [ "tests" ]

filterwarnings = [
    'ignore:The pytest_cmdline_preparse hook is deprecated:DeprecationWarning',
]


# tox doesn't quite support native pyproject.toml, but at least lets us
# store the ini-type config here
[tool.tox]

legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py37,py38,py39,py310

[testenv]
deps =
    pytest >=6.2
    pytest-html >=3.1
    pytest-cov >=2.12
    pytest-order >=1.0
    requests >=2.25.0
    kaitaistruct==0.9
    ppretty>=1.3
    responses>=0.16.0

commands = {posargs:pytest}
"""
